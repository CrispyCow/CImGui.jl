using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libcimgui"], :libcimgui),
    LibraryProduct(prefix, ["libcimgui_helper"], :libcimgui_helper),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/Gnimuc/CImGuiBuilder/releases/download/v1.66b.1-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/CImGui.v1.66.0-b.aarch64-linux-gnu.tar.gz", "ff2ca6f60881a79ffe95b7ad9acb79368b946a90d1f673c8c8d66e776c03da9d"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/CImGui.v1.66.0-b.aarch64-linux-musl.tar.gz", "068be669ad5879bfb1e65bca59c95df6849ec95afd43dce24c6b3273d8a52a40"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.66.0-b.arm-linux-gnueabihf.tar.gz", "7c1e9d383f896068caf63808943797275290c8218e9f35e46c3e6733589ade54"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.66.0-b.arm-linux-musleabihf.tar.gz", "1af0c6eb5a273629013dd60744c4e74c1a958e13e3e9ced658476d942c661b77"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/CImGui.v1.66.0-b.i686-linux-gnu.tar.gz", "0441c0194567eebeb9211588335371a030d50ac692ef38d6630c593ed08dd216"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/CImGui.v1.66.0-b.i686-linux-musl.tar.gz", "ea768d4f8c5ef5dbfb03853e989fa19b702540feb1188c60feb04cf089cec76a"),
    Windows(:i686) => ("$bin_prefix/CImGui.v1.66.0-b.i686-w64-mingw32.tar.gz", "d2b4f0543129b7ca9479e6bd69442d5ae2213e2aedd6571f9a48502451031508"),
    MacOS(:x86_64) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-apple-darwin14.tar.gz", "5c028f999cd10ec7e38e90e1d78adfadcc867cafd6000a0c8c3a49ae22be6ed9"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-linux-gnu.tar.gz", "52626375e60cccd6ffd62a591fb99713cc3d7c670205d031fdd16130be6c1980"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-linux-musl.tar.gz", "a5e118627e682195a02cc7132b629ee08fe198589c65b3cb25f35b86df8f97e6"),
    FreeBSD(:x86_64) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-unknown-freebsd11.1.tar.gz", "682edc3fae551685742f438ea5483cb9a50933f04b151f6b12476273ebfcf3b5"),
    Windows(:x86_64) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-w64-mingw32.tar.gz", "7e54ef86517940e188de707e29fc3bc250387347f3d93122aa421b2f51da264f"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
