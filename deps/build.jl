using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libcimgui"], :libcimgui),
    LibraryProduct(prefix, ["libcimgui_helper"], :libcimgui_helper),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/Gnimuc/CImGuiBuilder/releases/download/v1.73.0-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/CImGui.v1.71.0.aarch64-linux-gnu.tar.gz", "91303c4895a81e247a503aa89f902ffb1a922cd8b6563cc5f8eb4a3bd842c152"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/CImGui.v1.71.0.aarch64-linux-musl.tar.gz", "8b4b93c55760d2f6f6c6f52d6fe669c31e9923fe06519b8c9d44d3c7aed4bc6c"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.71.0.arm-linux-gnueabihf.tar.gz", "d487673557f5f63582beaac25ba6d807c7b98fddd3cda2cf605c799c31266347"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.71.0.arm-linux-musleabihf.tar.gz", "3edc6cda3de9b42f089ddadcdd4384bd43f7d3da6a4c123c2604cac93d35b250"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/CImGui.v1.71.0.i686-linux-gnu.tar.gz", "6d94e11d1a9e9265411f758f75f488a4ddba996f1205b4a98d27d9f70ae2440b"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/CImGui.v1.71.0.i686-linux-musl.tar.gz", "20e538f9bd13438fc44d272ecfc40f49a270b9c61bebaaa9cf1cda905a4457fd"),
    Windows(:i686) => ("$bin_prefix/CImGui.v1.71.0.i686-w64-mingw32.tar.gz", "fa527aa327f190c3555aee43efdd4dc7ff5ccb70ac01c375bbf7bb1019428a6d"),
    MacOS(:x86_64) => ("$bin_prefix/CImGui.v1.71.0.x86_64-apple-darwin14.tar.gz", "1b66cb0031455911b1abaf5ad6998c45181cbf3179a8df5043af92a12dfb7fc6"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/CImGui.v1.71.0.x86_64-linux-gnu.tar.gz", "7f0092916553b95d9750ec173aec91702f3fa1fe497ea761b0ac1997653ad402"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/CImGui.v1.71.0.x86_64-linux-musl.tar.gz", "d9f48705363a5daefaa94b12d20ee184f618c0f17853d5b1bd943abfe654255f"),
    FreeBSD(:x86_64) => ("$bin_prefix/CImGui.v1.71.0.x86_64-unknown-freebsd11.1.tar.gz", "93d67fbfb49516d100e38f50d1ca333dc93a7d39faa6d76f34d8aeac6166fbcd"),
    Windows(:x86_64) => ("$bin_prefix/CImGui.v1.71.0.x86_64-w64-mingw32.tar.gz", "0c084d2708ba2a63fb0ac4b7d2bbc6650d0e7293eac6b4deaedf73c676344d29"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
