using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libcimgui"], :libcimgui),
    LibraryProduct(prefix, ["libcimgui_helper"], :libcimgui_helper),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/Gnimuc/CImGuiBuilder/releases/download/v1.66b.1-2"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/CImGui.v1.66.0-b.aarch64-linux-gnu.tar.gz", "8ec2691aa9efba28686e1e91c453ce830dc0e0713b3dd523016aa56ba4d4426e"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/CImGui.v1.66.0-b.aarch64-linux-musl.tar.gz", "ac43791bd75df8ec5a6d68066b90c229c638c85c0de6b22ea19d639f7b61bb4a"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.66.0-b.arm-linux-gnueabihf.tar.gz", "80631c5941253d1ef87aa1708f7254da75e9baa8ee5b7c159ef845bf4a4a09dd"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.66.0-b.arm-linux-musleabihf.tar.gz", "3a8667226d601fb5c580cdb7881ce442843c727cb3d1ce57d1b33c415ccd2787"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/CImGui.v1.66.0-b.i686-linux-gnu.tar.gz", "d54d1dd7c39d1dd9af434e3bb74d33628e9b6633fd8f8aef80140656bdb9f7d4"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/CImGui.v1.66.0-b.i686-linux-musl.tar.gz", "1c51af4c54b5b690075cc7b2e1e3cf666c5008578305b9dcdc27eb8e12cd9f78"),
    Windows(:i686) => ("$bin_prefix/CImGui.v1.66.0-b.i686-w64-mingw32.tar.gz", "067c17a452a650715ba4d187e346865a9fa768e10d4d4a10a57fc51c4b306315"),
    MacOS(:x86_64) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-apple-darwin14.tar.gz", "ef518bb64c1fc7b4433383fde46167fb8d905b52db7037e346374058671ee466"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-linux-gnu.tar.gz", "0496df66ca135d4b6fa9a3228f8933b2f12cf4c85a84579a2dc0016da78eae28"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-linux-musl.tar.gz", "a77776331755b6e498a257fd27a959f0d70008f62245735fec3fe1bed12810c2"),
    FreeBSD(:x86_64) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-unknown-freebsd11.1.tar.gz", "232d86ed497c1c56e9df5edf50b01f0f3ddcbab4d5222f5fa1ffb012d5900c84"),
    Windows(:x86_64) => ("$bin_prefix/CImGui.v1.66.0-b.x86_64-w64-mingw32.tar.gz", "e4052387819d6493957d7968cb9c652ab429af3c4f70e7dfe10f38910497c028"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
