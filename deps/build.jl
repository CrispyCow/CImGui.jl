using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libcimgui"], :libcimgui),
    LibraryProduct(prefix, ["libcimgui_helper"], :libcimgui_helper),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/Gnimuc/CImGuiBuilder/releases/download/v1.68.0-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/CImGui.v1.68.0.aarch64-linux-gnu.tar.gz", "c045fcc4e3fa0f5ae91e79892f5730e55656e308663318a344a35de3a09891f6"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/CImGui.v1.68.0.aarch64-linux-musl.tar.gz", "e3b89702982302bf4e6516b78fa4dd697deda6ccca27400a20cde23efb91bd37"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.68.0.arm-linux-gnueabihf.tar.gz", "856a40c541b3b2f8eb2138624e1a088dbbbedf88a2ea8146929dff3767fbff5a"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.68.0.arm-linux-musleabihf.tar.gz", "8ee33fc7453a22085a1833a0f2513831cf9dafb8e343fc23eb5e694c42fb2a34"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/CImGui.v1.68.0.i686-linux-gnu.tar.gz", "18430df8378607dd1ab05f1db67eeee74aa1f7ccc465757d4bb2fd3315755617"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/CImGui.v1.68.0.i686-linux-musl.tar.gz", "2659bd5f103931ae13b6d977fbd5645fb30f262b5488bf3e29026c8bdd48a9be"),
    Windows(:i686) => ("$bin_prefix/CImGui.v1.68.0.i686-w64-mingw32.tar.gz", "52e25d27468612e4363d2af29b02a110f47444a04780da3545857b4c2e75cda5"),
    MacOS(:x86_64) => ("$bin_prefix/CImGui.v1.68.0.x86_64-apple-darwin14.tar.gz", "e64c75cf07fd76b4f1ff914edb5dfc95bd20523e58871a9556dacdbe21f45bfa"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/CImGui.v1.68.0.x86_64-linux-gnu.tar.gz", "eaf8c19e3cd7bd7e867dd71c9e404620b1ed3772d7b7b338472c3d91863d4a37"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/CImGui.v1.68.0.x86_64-linux-musl.tar.gz", "1e6971358667feb0cb170be1e2a6450b40844863a9dfcbcc136723c24d5700a9"),
    FreeBSD(:x86_64) => ("$bin_prefix/CImGui.v1.68.0.x86_64-unknown-freebsd11.1.tar.gz", "01c19689d5d942cf5cf19cc58462326f39d37eb348c818d6a74e76e2c48cb0b2"),
    Windows(:x86_64) => ("$bin_prefix/CImGui.v1.68.0.x86_64-w64-mingw32.tar.gz", "2f8e54dccd8f2461b31637a2d693f9645c23a7c97bb120a69b7e78823ce2b782"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
